<?php

/**
 * Declaring the block.
 */
function waiver_form_block_info() {
  $blocks['waiver'] = array(
    'info' => t('Conntext block'),
  );
  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function waiver_form_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'waiver':
      $block['subject'] = t('Protect your business by waiver');
      $block['content'] = drupal_get_form('waiver_form_new_waiver_form');
      break;
  }
  return $block;
}

function waiver_form_form_alter(&$form, &$form_state, $form_id) {
//  dpm($form_id);  // print form ID to messages
//  dpm($form);  // pretty print array using Krumo to messages
}

/**
 * Define a form for creating new waiver content type.
 */
function waiver_form_new_waiver_form($form, &$form_state) {
  // Waiver name field.
  // TODO make this field appear only if the context is empty.
  $node = null;
  if(isset($form_state['build_info']['args'][0])) {
    $node = $form_state['build_info']['args'][0];
  }
  else {
    $node = node_load(arg(1)); // You have to set the node load to a variable.
  }
  if (empty($node)) {
    return array();
  }

  $fields = waiver_definition_order_array($node);
  $form_fields = _waiver_form_fields_array();

  foreach ($fields as $key => $field) {
    // The name of the field will be the same name as the row field -  "_row"
    // the key "field_gender_row" will be "field_gender"
    $form[substr($key, 0, -4)] = $form_fields[$key];
  }

  $form['field_signature'] = array(
    '#title' => 'Signature',
    '#type' => 'signaturefield',
    '#color' => '#0f0',
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    // #value is the text to display inside the button
    '#value' => t('Submit'),
  );
  
  if (!empty($node->field_free_field_1_label['und'][0]['value'])) {
    $form['field_free_field_1']['#title'] = $node->field_free_field_1_label['und'][0]['value'];
  }
  else {
    unset($form['field_free_field_1']);
  }

  return $form;
}

function _waiver_form_fields_array() {
  $form_fields = array(
    'field_first_name_row' => array(
      '#type' => 'textfield',
      '#required' => TRUE,
    ),
    'field_last_name_row' => array(
      '#type' => 'textfield',
      '#required' => TRUE,
    ),
    'field_birth_date_row' => array(
      '#type' => 'date_popup',
    ),
    'field_id_row' => array(
      '#type' => 'textfield',
      '#required' => TRUE,
    ),
    'field_gender_row' => array(
      '#type' => 'radios',
      '#options' => array(t('Male'), t('Female')),
    ),
    'field_free_field_1_row' => array(
      '#type' => 'textfield',
      '#required' => TRUE,
    ),
  );
  
  $names = waiver_definition_names_array();
  foreach ($form_fields as $key => $value) {
    $form_fields[$key]['#title'] = $names[$key];
  }
  return $form_fields;
}

/*
 * Define a validation function that drupal will
 * automatically call when the submit button is pressed.
 */

function waiver_form_new_waiver_form_validate($form, &$form_state) {
  // Check if the content type name is already exists.
}

/*
 * Define a submit funciton that drupal will
 * automatically call when submit is pressed (and all validators pass)
 */
function waiver_form_new_waiver_form_submit($form, &$form_state) {
  $node = node_load(arg(1));
  $uid = $node->uid;
  $values_for_node = array();
  $values_for_node['field_waiver_definition']['und'][0]['nid'] = $node->nid;
  $values_for_node['field_signature']['und'][0]['data'] = $form_state['values']['field_signature'];
//$form_state->values;
  $standard = array(
    'field_first_name' => '',
    'field_last_name' => '',
    'field_id' => '',
    'field_birth_date' => '',
    'field_gender' => '',
    'field_free_field_1' => '',
  );
  
  $title = $node->nid . ' ';
  foreach ($standard as $key => $value) {
    if (isset($form_state['values'][$key])) {
      $values_for_node[$key]['und'][0]['value'] = $form_state['values'][$key];
      $title .= $form_state['values'][$key] . ' ';
    }
  }
  
  _waiver_form_create_a_node($values_for_node, $uid, $title);
}

function _waiver_form_create_a_node($values, $uid, $title) {
  $node = new stdClass(); // We create a new node object
  $node->type = "waiver"; // Or any other content type you want
  $node->title = $title;
  $node->language = LANGUAGE_NONE; // Or any language code if Locale module is enabled. More on this below *
//$node->path = array('alias' => 'your node path'); // Setting a node path
  node_object_prepare($node); // Set some default values.
  $node->uid = $uid; // Or any id you wish
  
  foreach ($values as $key => $value) {
    $node->{$key} = $value; 
  }
//  $node->field_first_name[$node->language][0]['value'] = 'This is a custom field value';
  $node = node_submit($node); // Prepare node for a submit
  node_save($node); // After this call we'll get a nid
}
